void light_check(SpiCore *light_p, GpoCore *led_p) {
   light_p->set_freq(40000);
   light_p->set_mode(0, 0); //set it to mode 0, which means cpol= 0 and chpa = 0
   light_p->assert_ss(0); //active low, which means it is selected

	/*
   According to the data sheet:

		"The amount of light the ALS is exposed to
		determines the voltage level passed into the ADC,
		which converts it to 8-bits of data. A value of 0 indicates a low
		light level and a value of 255 indicates a high light level.

	From the header file:
	 	 *@note a transfer performs read/write at the same time.
	 	 *@note a "dummy" write data should be used if only read is needed.

   */

   uint16_t data = (light_p->transfer(0x00) << 8) | light_p->transfer(0x00);
   // First 8 bits are shifted to the left, second 8 bits are shifted to the write
   // Using or will combine them together

   light_p->deassert_ss(0);



   uint8_t light = (data >> 4) & 0xFF;

   //shift 5 places to the right and mask

   /* According to the data sheet:

   	   	The bits of information, placed on the falling edge of the SCLK and valid on the
		subsequent rising edge of SCLK, consist of three leading zeroes,
		the eight bits of information with the MSB first, and four trailing zeroes.

    	*** only the middle 8 count = 255 ***
   */


   int leds = (light * 17) / 255;
   // if light value is 255, then 255*16 = 4080 / 255 = all 16 bits on

   led_p->write((1 << leds) - 1);
   //(ex) HOWEVER if it is at its max brightness => (255 * 16) /255 = 1000000000000000 >> 16
}


GpoCore led(get_slot_addr(BRIDGE_BASE, S2_LED));
GpiCore sw(get_slot_addr(BRIDGE_BASE, S3_SW));
SpiCore light(get_slot_addr(BRIDGE_BASE, S4_USER));
XadcCore adc(get_slot_addr(BRIDGE_BASE, S5_XDAC));
PwmCore pwm(get_slot_addr(BRIDGE_BASE, S6_PWM));
DebounceCore btn(get_slot_addr(BRIDGE_BASE, S7_BTN));
SsegCore sseg(get_slot_addr(BRIDGE_BASE, S8_SSEG));
SpiCore spi(get_slot_addr(BRIDGE_BASE, S9_SPI));
I2cCore adt7420(get_slot_addr(BRIDGE_BASE, S10_I2C));
Ps2Core ps2(get_slot_addr(BRIDGE_BASE, S11_PS2));
DdfsCore ddfs(get_slot_addr(BRIDGE_BASE, S12_DDFS));
AdsrCore adsr(get_slot_addr(BRIDGE_BASE, S13_ADSR), &ddfs);


int main() {

	 GpoCore led(get_slot_addr(BRIDGE_BASE, S2_LED));
	   SpiCore light(get_slot_addr(BRIDGE_BASE, S4_USER));

	   while (1) {
	      light_check(&light, &led);
	      sleep_ms(100);
	   }

}
